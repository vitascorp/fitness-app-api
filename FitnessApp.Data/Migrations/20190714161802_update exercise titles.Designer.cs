// <auto-generated />
using System;
using FitnessApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitnessApp.Data.Migrations
{
    [DbContext(typeof(FitnessAppDbContext))]
    [Migration("20190714161802_update exercise titles")]
    partial class updateexercisetitles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitnessApp.Data.Models.Category", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int>("Order");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FitnessApp.Data.Models.Exercise", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<int>("Order");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitnessApp.Data.Models.Measure", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("KgCoef");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int>("Order");

                    b.Property<string>("ShortName")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("FitnessApp.Data.Models.Training", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("FitnessApp.Data.Models.TrainingExercise", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order");

                    b.Property<int>("TrainingId");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingExercises");
                });

            modelBuilder.Entity("FitnessApp.Data.Models.TrainingExerciseAttempt", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("Order");

                    b.Property<int>("SupersetOrder");

                    b.Property<int>("TrainingExerciseId");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("TrainingExerciseId");

                    b.ToTable("TrainingExerciseAttempts");
                });

            modelBuilder.Entity("FitnessApp.Data.Models.TrainingExerciseTitle", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExcerciseId");

                    b.Property<int>("ExerciseId");

                    b.Property<int>("MeasureId");

                    b.Property<int>("SupersetOrder");

                    b.Property<int>("TrainingExerciseId");

                    b.HasKey("Id");

                    b.HasIndex("ExcerciseId");

                    b.HasIndex("MeasureId");

                    b.HasIndex("TrainingExerciseId");

                    b.ToTable("TrainingExerciseTitles");
                });

            modelBuilder.Entity("FitnessApp.Data.Models.Exercise", b =>
                {
                    b.HasOne("FitnessApp.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessApp.Data.Models.Training", b =>
                {
                    b.HasOne("FitnessApp.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessApp.Data.Models.TrainingExercise", b =>
                {
                    b.HasOne("FitnessApp.Data.Models.Training", "Training")
                        .WithMany("Exercises")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessApp.Data.Models.TrainingExerciseAttempt", b =>
                {
                    b.HasOne("FitnessApp.Data.Models.TrainingExercise", "TrainingExercise")
                        .WithMany("Attempts")
                        .HasForeignKey("TrainingExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessApp.Data.Models.TrainingExerciseTitle", b =>
                {
                    b.HasOne("FitnessApp.Data.Models.Exercise", "Excercise")
                        .WithMany()
                        .HasForeignKey("ExcerciseId");

                    b.HasOne("FitnessApp.Data.Models.Measure", "Measure")
                        .WithMany()
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FitnessApp.Data.Models.TrainingExercise", "TrainingExercise")
                        .WithMany("Titles")
                        .HasForeignKey("TrainingExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
